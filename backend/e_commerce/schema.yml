openapi: 3.0.3
info:
  title: B2C Marketplace platform
  version: 0.1.0
  description: "\n    A backend web service acting as an intermediary service between\
    \ sellers and \n    customers where the sellers can create their own shops with\
    \ their products \n    in it, and the customers can purchase products from an\
    \ individual shop or \n    using the web app's product listing feature similar\
    \ to an e-commerce app.\n    "
paths:
  /api/admin/token/:
    post:
      operationId: api_admin_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminTokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminTokenObtainPair'
          description: ''
  /api/admin/token/refresh/:
    post:
      operationId: api_admin_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminTokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminTokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminTokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminTokenRefresh'
          description: ''
  /api/admin/token/verify/:
    post:
      operationId: api_admin_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminTokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminTokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminTokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminTokenVerify'
          description: ''
  /api/products/:
    get:
      operationId: api_products_list
      description: |-
        Providing a subcategory via query parameter in the URL is required and the
        provided subcategory name should already exist in the database, since the
        products belonging to the provided subcategory are retrieved.
      parameters:
      - in: query
        name: in_stock
        schema:
          type: boolean
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: price_max
        schema:
          type: integer
      - in: query
        name: price_min
        schema:
          type: integer
      - in: query
        name: subcategory
        schema:
          type: string
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductListList'
          description: ''
    post:
      operationId: api_products_create
      description: |-
        Providing a subcategory via query parameter in the URL is required and the
        provided subcategory name should already exist in the database, since the
        products belonging to the provided subcategory are retrieved.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductList'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductList'
          description: ''
  /api/products/{format}:
    get:
      operationId: api_products_formatted_list
      description: |-
        Providing a subcategory via query parameter in the URL is required and the
        provided subcategory name should already exist in the database, since the
        products belonging to the provided subcategory are retrieved.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: in_stock
        schema:
          type: boolean
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: price_max
        schema:
          type: integer
      - in: query
        name: price_min
        schema:
          type: integer
      - in: query
        name: subcategory
        schema:
          type: string
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductListList'
          description: ''
    post:
      operationId: api_products_formatted_create
      description: |-
        Providing a subcategory via query parameter in the URL is required and the
        provided subcategory name should already exist in the database, since the
        products belonging to the provided subcategory are retrieved.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductList'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductList'
          description: ''
  /api/products/{id}/:
    get:
      operationId: api_products_retrieve
      description: |-
        Increase the view count of a product but with the constraint of having a cooldown
        period of one day for each client, which is handled by caching the client's IP
        for one day.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductList'
          description: ''
    put:
      operationId: api_products_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductList'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductList'
          description: ''
    patch:
      operationId: api_products_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductList'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductList'
          description: ''
    delete:
      operationId: api_products_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/products/{id}{format}:
    get:
      operationId: api_products_formatted_retrieve
      description: |-
        Increase the view count of a product but with the constraint of having a cooldown
        period of one day for each client, which is handled by caching the client's IP
        for one day.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductList'
          description: ''
    put:
      operationId: api_products_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductList'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductList'
          description: ''
    patch:
      operationId: api_products_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductList'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductList'
          description: ''
    delete:
      operationId: api_products_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/products/tags/:
    get:
      operationId: api_products_tags_list
      description: For listing all products belonging to a certain tag or list of
        tags
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductListList'
          description: ''
  /api/products/tags{format}:
    get:
      operationId: api_products_tags_formatted_list
      description: For listing all products belonging to a certain tag or list of
        tags
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductListList'
          description: ''
  /api/user/account/change_password/:
    put:
      operationId: api_user_account_change_password_update
      description: |-
        Provides the following actions (requires the current user to be authenticated):
        - get_info: retrieves the current user account info.
        - update_info: update the current user account info (except phone, email and password)
        - change_password: for changing current password.
        - change_phone_request: for changing user's current phone password by requesting an OTP via SMS,
          a verification code is sent to the new phone and then used in the next action
          to complete the phone number update process.
        - change_phone_verify: for verifying the new phone number, the verification code from previous action
          should be inputted inorder to complete the phone number update process.
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/user/account/change_phone_request/:
    put:
      operationId: api_user_account_change_phone_request_update
      description: |-
        Provides the following actions (requires the current user to be authenticated):
        - get_info: retrieves the current user account info.
        - update_info: update the current user account info (except phone, email and password)
        - change_password: for changing current password.
        - change_phone_request: for changing user's current phone password by requesting an OTP via SMS,
          a verification code is sent to the new phone and then used in the next action
          to complete the phone number update process.
        - change_phone_verify: for verifying the new phone number, the verification code from previous action
          should be inputted inorder to complete the phone number update process.
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/user/account/change_phone_verify/:
    put:
      operationId: api_user_account_change_phone_verify_update
      description: |-
        Provides the following actions (requires the current user to be authenticated):
        - get_info: retrieves the current user account info.
        - update_info: update the current user account info (except phone, email and password)
        - change_password: for changing current password.
        - change_phone_request: for changing user's current phone password by requesting an OTP via SMS,
          a verification code is sent to the new phone and then used in the next action
          to complete the phone number update process.
        - change_phone_verify: for verifying the new phone number, the verification code from previous action
          should be inputted inorder to complete the phone number update process.
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/user/account/get_info/:
    get:
      operationId: api_user_account_get_info_retrieve
      description: |-
        Provides the following actions (requires the current user to be authenticated):
        - get_info: retrieves the current user account info.
        - update_info: update the current user account info (except phone, email and password)
        - change_password: for changing current password.
        - change_phone_request: for changing user's current phone password by requesting an OTP via SMS,
          a verification code is sent to the new phone and then used in the next action
          to complete the phone number update process.
        - change_phone_verify: for verifying the new phone number, the verification code from previous action
          should be inputted inorder to complete the phone number update process.
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/user/account/update_info/:
    put:
      operationId: api_user_account_update_info_update
      description: |-
        Provides the following actions (requires the current user to be authenticated):
        - get_info: retrieves the current user account info.
        - update_info: update the current user account info (except phone, email and password)
        - change_password: for changing current password.
        - change_phone_request: for changing user's current phone password by requesting an OTP via SMS,
          a verification code is sent to the new phone and then used in the next action
          to complete the phone number update process.
        - change_phone_verify: for verifying the new phone number, the verification code from previous action
          should be inputted inorder to complete the phone number update process.
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/user/customer-addresses/:
    get:
      operationId: api_user_customer_addresses_list
      description: |-
        Note that if a request is made to create more than 5 addresses,
        the request gets prohibited by a 400 response.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomerAddressList'
          description: ''
    post:
      operationId: api_user_customer_addresses_create
      description: |-
        Note that if a request is made to create more than 5 addresses,
        the request gets prohibited by a 400 response.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerAddress'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAddress'
          description: ''
  /api/user/customer-addresses{format}:
    get:
      operationId: api_user_customer_addresses_formatted_list
      description: |-
        Note that if a request is made to create more than 5 addresses,
        the request gets prohibited by a 400 response.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomerAddressList'
          description: ''
    post:
      operationId: api_user_customer_addresses_formatted_create
      description: |-
        Note that if a request is made to create more than 5 addresses,
        the request gets prohibited by a 400 response.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerAddress'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAddress'
          description: ''
  /api/user/customer-addresses/{id}/:
    get:
      operationId: api_user_customer_addresses_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAddress'
          description: ''
    put:
      operationId: api_user_customer_addresses_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerAddress'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAddress'
          description: ''
    patch:
      operationId: api_user_customer_addresses_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomerAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomerAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomerAddress'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAddress'
          description: ''
    delete:
      operationId: api_user_customer_addresses_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/user/customer-addresses/{id}{format}:
    get:
      operationId: api_user_customer_addresses_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAddress'
          description: ''
    put:
      operationId: api_user_customer_addresses_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerAddress'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAddress'
          description: ''
    patch:
      operationId: api_user_customer_addresses_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomerAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomerAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomerAddress'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAddress'
          description: ''
    delete:
      operationId: api_user_customer_addresses_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/user/customer-profile/:
    get:
      operationId: api_user_customer_profile_retrieve
      description: Retrieve or update current authenticated user's customer profile
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerProfile'
          description: ''
    put:
      operationId: api_user_customer_profile_update
      description: Retrieve or update current authenticated user's customer profile
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerProfile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerProfile'
          description: ''
    patch:
      operationId: api_user_customer_profile_partial_update
      description: Retrieve or update current authenticated user's customer profile
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomerProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomerProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomerProfile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerProfile'
          description: ''
  /api/user/customer-profile{format}:
    get:
      operationId: api_user_customer_profile_formatted_retrieve
      description: Retrieve or update current authenticated user's customer profile
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerProfile'
          description: ''
    put:
      operationId: api_user_customer_profile_formatted_update
      description: Retrieve or update current authenticated user's customer profile
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerProfile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerProfile'
          description: ''
    patch:
      operationId: api_user_customer_profile_formatted_partial_update
      description: Retrieve or update current authenticated user's customer profile
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomerProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomerProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomerProfile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerProfile'
          description: ''
  /api/user/onetime-auth/request_auth/:
    post:
      operationId: api_user_onetime_auth_request_auth_create
      description: |-
        Should be used when the user forgets their password or they want to login without
        inputting their password, which gives them access to one time authentication using OTP via SMS.
        Provides the following actions:
        - request_auth: sends an OTP via SMS to the inputted phone
          number, which is required in the next action.
        - verify_auth_request: verify the one time authentication using the OTP recieved
          from previous action.
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/user/onetime-auth/verify_auth_request/:
    post:
      operationId: api_user_onetime_auth_verify_auth_request_create
      description: |-
        Should be used when the user forgets their password or they want to login without
        inputting their password, which gives them access to one time authentication using OTP via SMS.
        Provides the following actions:
        - request_auth: sends an OTP via SMS to the inputted phone
          number, which is required in the next action.
        - verify_auth_request: verify the one time authentication using the OTP recieved
          from previous action.
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/user/seller-bank-accounts/:
    get:
      operationId: api_user_seller_bank_accounts_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSellerBankAccountList'
          description: ''
    post:
      operationId: api_user_seller_bank_accounts_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerBankAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerBankAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerBankAccount'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerBankAccount'
          description: ''
  /api/user/seller-bank-accounts{format}:
    get:
      operationId: api_user_seller_bank_accounts_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSellerBankAccountList'
          description: ''
    post:
      operationId: api_user_seller_bank_accounts_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerBankAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerBankAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerBankAccount'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerBankAccount'
          description: ''
  /api/user/seller-bank-accounts/{id}/:
    get:
      operationId: api_user_seller_bank_accounts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerBankAccount'
          description: ''
    put:
      operationId: api_user_seller_bank_accounts_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerBankAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerBankAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerBankAccount'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerBankAccount'
          description: ''
    patch:
      operationId: api_user_seller_bank_accounts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSellerBankAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSellerBankAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSellerBankAccount'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerBankAccount'
          description: ''
    delete:
      operationId: api_user_seller_bank_accounts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/user/seller-bank-accounts/{id}{format}:
    get:
      operationId: api_user_seller_bank_accounts_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerBankAccount'
          description: ''
    put:
      operationId: api_user_seller_bank_accounts_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerBankAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerBankAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerBankAccount'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerBankAccount'
          description: ''
    patch:
      operationId: api_user_seller_bank_accounts_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSellerBankAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSellerBankAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSellerBankAccount'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerBankAccount'
          description: ''
    delete:
      operationId: api_user_seller_bank_accounts_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/user/seller-business-licenses/:
    get:
      operationId: api_user_seller_business_licenses_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSellerBusinessLicenseList'
          description: ''
    post:
      operationId: api_user_seller_business_licenses_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerBusinessLicense'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerBusinessLicense'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerBusinessLicense'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerBusinessLicense'
          description: ''
  /api/user/seller-business-licenses{format}:
    get:
      operationId: api_user_seller_business_licenses_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSellerBusinessLicenseList'
          description: ''
    post:
      operationId: api_user_seller_business_licenses_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerBusinessLicense'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerBusinessLicense'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerBusinessLicense'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerBusinessLicense'
          description: ''
  /api/user/seller-business-licenses/{id}/:
    get:
      operationId: api_user_seller_business_licenses_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerBusinessLicense'
          description: ''
    put:
      operationId: api_user_seller_business_licenses_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerBusinessLicense'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerBusinessLicense'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerBusinessLicense'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerBusinessLicense'
          description: ''
    patch:
      operationId: api_user_seller_business_licenses_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSellerBusinessLicense'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSellerBusinessLicense'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSellerBusinessLicense'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerBusinessLicense'
          description: ''
    delete:
      operationId: api_user_seller_business_licenses_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/user/seller-business-licenses/{id}{format}:
    get:
      operationId: api_user_seller_business_licenses_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerBusinessLicense'
          description: ''
    put:
      operationId: api_user_seller_business_licenses_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerBusinessLicense'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerBusinessLicense'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerBusinessLicense'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerBusinessLicense'
          description: ''
    patch:
      operationId: api_user_seller_business_licenses_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSellerBusinessLicense'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSellerBusinessLicense'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSellerBusinessLicense'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerBusinessLicense'
          description: ''
    delete:
      operationId: api_user_seller_business_licenses_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/user/seller-profile/:
    get:
      operationId: api_user_seller_profile_retrieve
      description: Retrieve or update current authenticated user's seller profile
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProfile'
          description: ''
    put:
      operationId: api_user_seller_profile_update
      description: Retrieve or update current authenticated user's seller profile
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProfile'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProfile'
          description: ''
    patch:
      operationId: api_user_seller_profile_partial_update
      description: Retrieve or update current authenticated user's seller profile
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSellerProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSellerProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSellerProfile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProfile'
          description: ''
  /api/user/seller-profile{format}:
    get:
      operationId: api_user_seller_profile_formatted_retrieve
      description: Retrieve or update current authenticated user's seller profile
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProfile'
          description: ''
    put:
      operationId: api_user_seller_profile_formatted_update
      description: Retrieve or update current authenticated user's seller profile
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProfile'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProfile'
          description: ''
    patch:
      operationId: api_user_seller_profile_formatted_partial_update
      description: Retrieve or update current authenticated user's seller profile
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSellerProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSellerProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSellerProfile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProfile'
          description: ''
  /api/user/signup/request_registration/:
    post:
      operationId: api_user_signup_request_registration_create
      description: |-
        Provides the following actions:
        - request_registration: Sends a register verficiation code SMS to user which is to be used in the next action.
        - verify_registration_request: Input the code recieved from previous action 'request_register'
          in order to complete the registration. A pair of access and refresh token will be the sent in a
          succesful response data.
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/user/signup/verify_registration_request/:
    post:
      operationId: api_user_signup_verify_registration_request_create
      description: |-
        Provides the following actions:
        - request_registration: Sends a register verficiation code SMS to user which is to be used in the next action.
        - verify_registration_request: Input the code recieved from previous action 'request_register'
          in order to complete the registration. A pair of access and refresh token will be the sent in a
          succesful response data.
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/user/token/:
    post:
      operationId: api_user_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EcomUserTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EcomUserTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EcomUserTokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EcomUserTokenObtainPair'
          description: ''
  /api/user/token/refresh:
    post:
      operationId: api_user_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EcomUserTokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EcomUserTokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EcomUserTokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EcomUserTokenRefresh'
          description: ''
  /api/user/token/verify/:
    post:
      operationId: api_user_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EcomUserTokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EcomUserTokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EcomUserTokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EcomUserTokenVerify'
          description: ''
components:
  schemas:
    AdminTokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    AdminTokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - access
      - refresh
    AdminTokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    CustomerAddress:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        address:
          type: string
          maxLength: 250
        postal_code:
          type: string
          nullable: true
          maxLength: 10
      required:
      - address
      - id
    CustomerProfile:
      type: object
      description: |-
        Method 'create' is never going to be used, since this serializer is only
        used for update and retrieve operations.
      properties:
        id:
          type: integer
          readOnly: true
        profile_picture:
          type: string
          format: uri
          nullable: true
        birth_date:
          type: string
          format: date
          nullable: true
        bio:
          type: string
          maxLength: 300
        preferences:
          nullable: true
        wishlist:
          type: array
          items:
            type: integer
      required:
      - id
    EcomUserTokenObtainPair:
      type: object
      properties:
        phone:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - password
      - phone
    EcomUserTokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - access
      - refresh
    EcomUserTokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    PaginatedCustomerAddressList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CustomerAddress'
    PaginatedProductListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductList'
    PaginatedSellerBankAccountList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SellerBankAccount'
    PaginatedSellerBusinessLicenseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SellerBusinessLicense'
    PatchedCustomerAddress:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        address:
          type: string
          maxLength: 250
        postal_code:
          type: string
          nullable: true
          maxLength: 10
    PatchedCustomerProfile:
      type: object
      description: |-
        Method 'create' is never going to be used, since this serializer is only
        used for update and retrieve operations.
      properties:
        id:
          type: integer
          readOnly: true
        profile_picture:
          type: string
          format: uri
          nullable: true
        birth_date:
          type: string
          format: date
          nullable: true
        bio:
          type: string
          maxLength: 300
        preferences:
          nullable: true
        wishlist:
          type: array
          items:
            type: integer
    PatchedProductList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        main_price:
          type: integer
          maximum: 2147483647
          minimum: 0
        main_image:
          type: string
          format: uri
    PatchedSellerBankAccount:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        card_number:
          type: string
          maxLength: 16
        card_owner_fullname:
          type: string
          maxLength: 50
        iban:
          type: string
          maxLength: 28
    PatchedSellerBusinessLicense:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        submitted_date:
          type: string
          format: date-time
          readOnly: true
        license_picture:
          type: string
          format: uri
    PatchedSellerProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        store_name:
          type: string
          nullable: true
          maxLength: 50
        store_address:
          type: string
          maxLength: 250
        store_description:
          type: string
          maxLength: 500
        is_verified:
          type: boolean
          readOnly: true
        products_sold:
          type: integer
          readOnly: true
        rating:
          type: string
          format: decimal
          readOnly: true
        profile_picture:
          type: string
          format: uri
          nullable: true
        website:
          type: string
          format: uri
          maxLength: 200
        established_date:
          type: string
          format: date
          readOnly: true
          nullable: true
    ProductList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        main_price:
          type: integer
          maximum: 2147483647
          minimum: 0
        main_image:
          type: string
          format: uri
      required:
      - id
      - main_price
      - name
    SellerBankAccount:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        card_number:
          type: string
          maxLength: 16
        card_owner_fullname:
          type: string
          maxLength: 50
        iban:
          type: string
          maxLength: 28
      required:
      - card_number
      - card_owner_fullname
      - iban
      - id
    SellerBusinessLicense:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        submitted_date:
          type: string
          format: date-time
          readOnly: true
        license_picture:
          type: string
          format: uri
      required:
      - id
      - license_picture
      - submitted_date
    SellerProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        store_name:
          type: string
          nullable: true
          maxLength: 50
        store_address:
          type: string
          maxLength: 250
        store_description:
          type: string
          maxLength: 500
        is_verified:
          type: boolean
          readOnly: true
        products_sold:
          type: integer
          readOnly: true
        rating:
          type: string
          format: decimal
          readOnly: true
        profile_picture:
          type: string
          format: uri
          nullable: true
        website:
          type: string
          format: uri
          maxLength: 200
        established_date:
          type: string
          format: date
          readOnly: true
          nullable: true
      required:
      - established_date
      - id
      - is_verified
      - products_sold
      - rating
      - store_address
